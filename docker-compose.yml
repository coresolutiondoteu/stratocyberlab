services:
  hackerlab:
    build: ./hackerlab
    container_name: scl-hackerlab
    hostname: hackerlab
    restart: always
    volumes:
      - ./hackerlab/data:/data
    ports:
      - "2222:22"
    networks:
      playground-net:
        ipv4_address: 172.20.0.2

  dashboard:
    build: ./dashboard
    container_name: scl-dashboard
    hostname: dashboard
    restart: always
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      playground-net:
        ipv4_address: 172.20.0.3
    volumes:
      - ./classes:/classes
      - ./challenges:/challenges
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "python", "-c", "'import requests; response = requests.get(\"http://localhost:80/\"); assert response.status_code == 200'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  ollama:
    image: ollama/ollama
    container_name: scl-ollama
    volumes:
      - ./ollama:/root/.ollama
    restart: always
    networks:
      playground-net:
        ipv4_address: 172.20.0.100
    healthcheck:
      test: ollama --version || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy: # These lines needs to be added for the GPU to take over
      resources:
        reservations:
          devices:
            - capabilities: [gpu]  # Specify that the container needs GPU access
    runtime: nvidia  # This enables the container to use NVIDIA runtime

# Explanation:
# For this (from "deploy:" till the end) to work, you will need Linux and/or 
# Windows with WSL2 (updated), both OS must be equiped with the dedicated GPU
# which is usable for LLM (with CUDA cores).

# If this is the case, then ollama service will start with the GPU and AI
# assistant will be super fast in responses compared to the CPU only.
# Notebook users, be careful about the nVIDIA Optimus, that can break things.
# If you have Optimus enabled notebook, just switch to dedicated GPU (sometimes
# it may be required to do that in the BIOS directly).

networks:
  playground-net:
    name: "playground-net"
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
